import{_ as t,c as o,a0 as a,o as r}from"./chunks/framework.JYSz7C5c.js";const u=JSON.parse('{"title":"Roadmap, and FAQ","description":"","frontmatter":{},"headers":[],"relativePath":"Introduction/Beyond.md","filePath":"Introduction/Beyond.md"}'),n={name:"Introduction/Beyond.md"};function i(s,e,l,d,c,h){return r(),o("div",null,e[0]||(e[0]=[a('<h1 id="roadmap-and-faq" tabindex="-1">Roadmap, and FAQ <a class="header-anchor" href="#roadmap-and-faq" aria-label="Permalink to &quot;Roadmap, and FAQ&quot;">​</a></h1><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><p><strong>Q: Are ZK Proofs Necessary for See3?</strong></p><p><strong>A:</strong> The current of iteration of See3 uses Cryptographic Descriptors, based on BBS Attribute Signatures, to prove image attestations. This is compact, fast, and most importantly, is privacy preserving.</p><p><strong>Q: How Long Does Proof Generation and Verification Take?</strong></p><p><strong>A:</strong> They&#39;re instantaneous. Circa 50ms for each operation.</p><h2 id="roadmap" tabindex="-1">Roadmap <a class="header-anchor" href="#roadmap" aria-label="Permalink to &quot;Roadmap&quot;">​</a></h2><p>We will continue to announce new tooling and solutions on a regular basis, once they have gone thorough internal testing.</p><h3 id="overcoming-the-cold-start-problem" tabindex="-1">Overcoming The Cold Start Problem <a class="header-anchor" href="#overcoming-the-cold-start-problem" aria-label="Permalink to &quot;Overcoming The Cold Start Problem&quot;">​</a></h3><p>We&#39;re exploring the following approaches to overcome the cold start problem:</p><ol><li><strong>Retrospective Edit Detection:</strong> we don&#39;t need to depend on See3-enabled editing tools -- we can guess which edits were made after the fact, and adjust the proof accordingly.</li><li><strong>Attested Image Record:</strong> we can use Retrospective Edit Detection, in combination with a database, to tell people which edited images are attested by See3, anywhere they appear on the internet.</li><li><strong>Strategic Partnerships:</strong> we can establish strategic partnerships with internet platforms, capture device manufacturers, and other stakeholders to introduce See3 into the user&#39;s workflow. We can also press downstream parties to adopt See3 by working with our partners to establish new financial incentives.</li><li><strong>Augmentation:</strong> we can augment existing platforms to include See3-enabled verification and editing tools using techniques such as browser plugins.</li><li><strong>Implementation Subsidies:</strong> we can subsidize the deployment and implementation of See3 across social media platforms.</li><li><strong>SVG Proof System:</strong> we can use secure hardware in combination with the SVG file format to support the verification of edited content, supported by a cloud API for rendering edited content.</li></ol><p>We look forward to announcing new solutions across all of these categories.</p><h3 id="our-distribution-model" tabindex="-1">Our Distribution Model <a class="header-anchor" href="#our-distribution-model" aria-label="Permalink to &quot;Our Distribution Model&quot;">​</a></h3><p>This primarily depends a series of strategic partnerships with internet platforms, capture device manufacturers, and other stakeholders to introduce See3 into their workflows.</p><p>Among other avenues, we&#39;re exploring the following monetization paths:</p><ul><li>Conversion APIs, which enable backwards-compatibility with other attestation products.</li><li>A Licensing Model for Trusted Parties.</li></ul><p>We will be trialing these approaches over the coming months.</p><h3 id="when-and-how" tabindex="-1">When, and How? <a class="header-anchor" href="#when-and-how" aria-label="Permalink to &quot;When, and How?&quot;">​</a></h3><p>We recommend that you join our <a href="https://twitter.com/see3xyz" target="_blank" rel="noreferrer">Twitter</a> and <a href="https://t.me/see3isthetruth" target="_blank" rel="noreferrer">Telegram</a> to get the latest updates and get exclusive early access to our tooling.</p>',19)]))}const m=t(n,[["render",i]]);export{u as __pageData,m as default};
